/**
 * Insights Dashboard page showing key metrics and analytics
 */

import React, { useState, useEffect } from 'react';
import {
  Box,
  Typography,
  Grid,
  Card,
  CardContent,
  Chip,
  Button,
  alpha,
  useTheme,
  LinearProgress,
  CircularProgress,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
} from '@mui/material';
import {
  Warning as WarningIcon,
  Block as BlockIcon,
  Lightbulb as InsightIcon,
  MonetizationOn as MoneyIcon,
} from '@mui/icons-material';
import { AdminLayout } from '@/shared/components/layouts';
import { useAuthStore } from '@/features/auth/store/auth-store';
import { API_BASE_URL } from '@/config/api.config';

interface DashboardMetrics {
  total_requests: number;
  total_mrr_impact: number;
  deal_blockers: number;
  urgent_items: number;
  by_urgency: {
    urgent: { count: number; mrr: number };
    important: { count: number; mrr: number };
    nice_to_have: { count: number; mrr: number };
    impending_churn: { count: number; mrr: number };
  };
  by_customer_type: {
    existing_customer: { count: number; mrr: number };
    associated_with_deal: { count: number; mrr: number };
    deal_lost: { count: number; mrr: number };
    pdmr: { count: number; mrr: number };
  };
  by_product: Array<{ product: string; count: number; mrr: number }>;
  top_categories: Array<{ category: string; count: number; mrr: number }>;
  critical_attention: Array<{
    urgency: string;
    customer: string;
    mrr: number;
    feature: string;
    product: string;
  }>;
  top_10_by_mrr: Array<{
    customer: string;
    mrr: number;
    urgency: string;
    feature: string;
    product: string;
  }>;
  common_deal_blockers: Array<{ feature: string; count: number }>;
  key_insights: {
    urgent_important_percentage: number;
    gmail_vs_outlook_ratio: number;
    deals_blocked: number;
    top_mrr_at_risk: number;
    most_requested: string;
  };
}

export function DashboardPage(): JSX.Element {
  const theme = useTheme();
  const { tokens } = useAuthStore();
  const [loading, setLoading] = useState(true);
  const [metrics, setMetrics] = useState<DashboardMetrics | null>(null);

  const WORKSPACE_ID = '647ab033-6d10-4a35-9ace-0399052ec874';

  const getAuthToken = () => {
    return tokens?.access_token || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTk3NDIzODgsInN1YiI6ImI0NzE0NGU3LTAyYTAtNGEyMi04MDBlLTNmNzE3YmZiNGZhYSIsInR5cGUiOiJhY2Nlc3MifQ.L2dOy92Nim5egY3nzRXQts3ywgxV_JvO_8EEiePpDNY';
  };

  useEffect(() => {
    fetchDashboardMetrics();
  }, []);

  const fetchDashboardMetrics = async () => {
    try {
      setLoading(true);
      const token = getAuthToken();
      const response = await fetch(
        `${API_BASE_URL}/api/v1/features/dashboard-metrics?workspace_id=${WORKSPACE_ID}`,
        {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json',
          }
        }
      );

      if (!response.ok) {
        throw new Error(`Failed to fetch dashboard metrics: ${response.status}`);
      }

      const data = await response.json();
      setMetrics(data);
    } catch (error) {
      console.error('Error fetching dashboard metrics:', error);
    } finally {
      setLoading(false);
    }
  };

  const formatCurrency = (value: number) => {
    if (value >= 1000) {
      return `$${(value / 1000).toFixed(0)}K`;
    }
    return `$${value.toFixed(0)}`;
  };

  const getUrgencyColor = (urgency: string) => {
    switch (urgency.toLowerCase()) {
      case 'urgent':
      case 'high':
        return theme.palette.error.main;
      case 'important':
      case 'medium':
        return theme.palette.warning.main;
      case 'nice to have':
      case 'low':
        return theme.palette.success.main;
      default:
        return theme.palette.grey[500];
    }
  };

  if (loading) {
    return (
      <AdminLayout>
        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>
          <CircularProgress />
        </Box>
      </AdminLayout>
    );
  }

  if (!metrics) {
    return (
      <AdminLayout>
        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>
          <Typography>Failed to load dashboard metrics</Typography>
        </Box>
      </AdminLayout>
    );
  }

  return (
    <AdminLayout>
      <Box>
        {/* Hero Section */}
        <Box sx={{ 
          mb: 3,
          p: 3,
          borderRadius: 2,
          background: `linear-gradient(135deg, ${alpha(theme.palette.primary.main, 0.1)} 0%, ${alpha(theme.palette.primary.main, 0.05)} 100%)`,
          border: `1px solid ${alpha(theme.palette.primary.main, 0.1)}`,
          position: 'relative',
          overflow: 'hidden',
          '&::before': {
            content: '""',
            position: 'absolute',
            top: -50,
            right: -50,
            width: 100,
            height: 100,
            borderRadius: '50%',
            background: `linear-gradient(135deg, ${alpha(theme.palette.primary.main, 0.1)} 0%, ${alpha(theme.palette.primary.main, 0.05)} 100%)`,
            filter: 'blur(20px)',
          },
        }}>
          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', position: 'relative', zIndex: 1 }}>
            <Box>
              <Typography variant="h3" sx={{ 
                fontWeight: 800, 
                mb: 1,
                background: `linear-gradient(135deg, ${theme.palette.primary.main} 0%, ${theme.palette.primary.dark} 100%)`,
                backgroundClip: 'text',
                WebkitBackgroundClip: 'text',
                WebkitTextFillColor: 'transparent',
              }}>
                Welcome back!
              </Typography>
              
              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>
                <Typography variant="h6" color="text.secondary" sx={{ fontWeight: 500 }}>
                  Your product intelligence platform for managing feature requests and themes.
                </Typography>
                {user?.company_name && (
                  <Chip 
                    label={user.company_name}
                    size="medium"
                    sx={{
                      background: `linear-gradient(135deg, ${theme.palette.primary.main} 0%, ${theme.palette.primary.dark} 100%)`,
                      color: 'white',
                      fontWeight: 600,
                      px: 1,
                      boxShadow: `0 4px 20px ${alpha(theme.palette.primary.main, 0.3)}`,
                    }}
                  />
                )}
              </Box>
            </Box>
            
            <Button
              variant="contained"
              size="large"
              startIcon={<SettingsIcon />}
              onClick={() => navigate(ROUTES.SETTINGS_WORKSPACE)}
              sx={{
                borderRadius: 1,
                px: 2,
                py: 1.5,
                background: `linear-gradient(135deg, ${theme.palette.primary.main} 0%, ${theme.palette.primary.dark} 100%)`,
                boxShadow: `0 8px 30px ${alpha(theme.palette.primary.main, 0.3)}`,
                '&:hover': {
                  transform: 'translateY(-2px)',
                  boxShadow: `0 12px 40px ${alpha(theme.palette.primary.main, 0.4)}`,
                },
                transition: 'all 0.3s ease-in-out',
              }}
            >
              Workspace Settings
            </Button>
          </Box>
        </Box>

        {/* Stats Cards */}
        <Grid container spacing={2} sx={{ mb: 3 }}>
          {[
            { 
              title: 'Total Requests', 
              value: '247', 
              change: '+12%', 
              icon: FeaturedPlayList,
              color: theme.palette.primary.main 
            },
            { 
              title: 'Active Themes', 
              value: '18', 
              change: '+3%', 
              icon: Category,
              color: theme.palette.success.main 
            },
            { 
              title: 'This Week', 
              value: '42', 
              change: '+8%', 
              icon: TrendingUp,
              color: theme.palette.warning.main 
            },
          ].map((stat) => (
            <Grid item xs={12} sm={6} md={4} key={stat.title}>
              <Card sx={{
                p: 1.5,
                borderRadius: 1,
                background: `linear-gradient(135deg, ${alpha(stat.color, 0.1)} 0%, ${alpha(stat.color, 0.05)} 100%)`,
                border: `1px solid ${alpha(stat.color, 0.1)}`,
                transition: 'all 0.3s ease-in-out',
                '&:hover': {
                  transform: 'translateY(-4px)',
                  boxShadow: `0 12px 40px ${alpha(stat.color, 0.2)}`,
                },
              }}>
                <CardContent sx={{ p: '12px !important' }}>
                  <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>
                    <Box sx={{
                      width: 48,
                      height: 48,
                      borderRadius: 2,
                      background: `linear-gradient(135deg, ${stat.color} 0%, ${alpha(stat.color, 0.8)} 100%)`,
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center',
                      boxShadow: `0 4px 20px ${alpha(stat.color, 0.3)}`,
                    }}>
                      <stat.icon sx={{ color: 'white', fontSize: 24 }} />
                    </Box>
                    <Chip 
                      label={stat.change}
                      size="small"
                      sx={{
                        background: stat.change.startsWith('+') ? 
                          `linear-gradient(135deg, ${alpha(theme.palette.success.main, 0.1)} 0%, ${alpha(theme.palette.success.main, 0.05)} 100%)` :
                          `linear-gradient(135deg, ${alpha(theme.palette.error.main, 0.1)} 0%, ${alpha(theme.palette.error.main, 0.05)} 100%)`,
                        color: stat.change.startsWith('+') ? theme.palette.success.main : theme.palette.error.main,
                        border: `1px solid ${stat.change.startsWith('+') ? alpha(theme.palette.success.main, 0.2) : alpha(theme.palette.error.main, 0.2)}`,
                        fontWeight: 600,
                      }}
                    />
                  </Box>
                  <Typography variant="h4" sx={{ fontWeight: 800, mb: 0.5, color: 'text.primary' }}>
                    {stat.value}
                  </Typography>
                  <Typography variant="body2" color="text.secondary" sx={{ fontWeight: 500 }}>
                    {stat.title}
                  </Typography>
                </CardContent>
              </Card>
            </Grid>
          ))}
        </Grid>

        {/* Main Content Grid */}
        <Grid container spacing={2}>
          <Grid item xs={12} md={4}>
            <Card sx={{
              borderRadius: 1,
              background: `linear-gradient(135deg, ${alpha(theme.palette.background.paper, 0.8)} 0%, ${alpha(theme.palette.background.paper, 0.4)} 100%)`,
              backdropFilter: 'blur(10px)',
              border: `1px solid ${alpha(theme.palette.divider, 0.1)}`,
              transition: 'all 0.3s ease-in-out',
              '&:hover': {
                transform: 'translateY(-2px)',
                boxShadow: `0 8px 30px ${alpha(theme.palette.primary.main, 0.1)}`,
              },
            }}>
              <CardContent sx={{ p: 2 }}>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>
                  <Category sx={{ color: theme.palette.primary.main }} />
                  <Typography variant="h6" sx={{ fontWeight: 600 }}>
                    Themes
                  </Typography>
                </Box>
                <Typography variant="body2" color="text.secondary" sx={{ lineHeight: 1.6 }}>
                  Organize and categorize feature requests by themes. Track trends and identify patterns in user feedback.
                </Typography>
              </CardContent>
            </Card>
          </Grid>
          
          <Grid item xs={12} md={4}>
            <Card sx={{
              borderRadius: 1,
              background: `linear-gradient(135deg, ${alpha(theme.palette.background.paper, 0.8)} 0%, ${alpha(theme.palette.background.paper, 0.4)} 100%)`,
              backdropFilter: 'blur(10px)',
              border: `1px solid ${alpha(theme.palette.divider, 0.1)}`,
              transition: 'all 0.3s ease-in-out',
              '&:hover': {
                transform: 'translateY(-2px)',
                boxShadow: `0 8px 30px ${alpha(theme.palette.success.main, 0.1)}`,
              },
            }}>
              <CardContent sx={{ p: 2 }}>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>
                  <FeaturedPlayList sx={{ color: theme.palette.success.main }} />
                  <Typography variant="h6" sx={{ fontWeight: 600 }}>
                    Features
                  </Typography>
                </Box>
                <Typography variant="body2" color="text.secondary" sx={{ lineHeight: 1.6 }}>
                  Manage and prioritize feature requests from your users. Track status and assign development priorities.
                </Typography>
              </CardContent>
            </Card>
          </Grid>
          
          <Grid item xs={12} md={4}>
            <Card sx={{
              borderRadius: 1,
              background: `linear-gradient(135deg, ${alpha(theme.palette.background.paper, 0.8)} 0%, ${alpha(theme.palette.background.paper, 0.4)} 100%)`,
              backdropFilter: 'blur(10px)',
              border: `1px solid ${alpha(theme.palette.divider, 0.1)}`,
              transition: 'all 0.3s ease-in-out',
              '&:hover': {
                transform: 'translateY(-2px)',
                boxShadow: `0 8px 30px ${alpha(theme.palette.warning.main, 0.1)}`,
              },
            }}>
              <CardContent sx={{ p: 2 }}>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>
                  <TrendingUp sx={{ color: theme.palette.warning.main }} />
                  <Typography variant="h6" sx={{ fontWeight: 600 }}>
                    Analytics
                  </Typography>
                </Box>
                <Typography variant="body2" color="text.secondary" sx={{ lineHeight: 1.6 }}>
                  Detailed insights and analytics on feature request trends, user engagement, and decision metrics.
                </Typography>
              </CardContent>
            </Card>
          </Grid>
        </Grid>

        {/* Getting Started Section */}
        <Box sx={{ mt: 4 }}>
          <Card sx={{
            borderRadius: 2,
            background: `linear-gradient(135deg, ${alpha(theme.palette.success.main, 0.1)} 0%, ${alpha(theme.palette.success.main, 0.05)} 100%)`,
            border: `1px solid ${alpha(theme.palette.success.main, 0.1)}`,
            position: 'relative',
            overflow: 'hidden',
            '&::before': {
              content: '""',
              position: 'absolute',
              top: -30,
              left: -30,
              width: 60,
              height: 60,
              borderRadius: '50%',
              background: `linear-gradient(135deg, ${alpha(theme.palette.success.main, 0.2)} 0%, ${alpha(theme.palette.success.main, 0.1)} 100%)`,
              filter: 'blur(15px)',
            },
          }}>
            <CardContent sx={{ p: 3, position: 'relative', zIndex: 1 }}>
              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 3 }}>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
                  <Box sx={{
                    width: 48,
                    height: 48,
                    borderRadius: 2,
                    background: `linear-gradient(135deg, ${theme.palette.success.main} 0%, ${theme.palette.success.dark} 100%)`,
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    boxShadow: `0 4px 20px ${alpha(theme.palette.success.main, 0.3)}`,
                  }}>
                    <AddIcon sx={{ color: 'white', fontSize: 24 }} />
                  </Box>
                  <Typography variant="h5" sx={{ fontWeight: 700 }}>
                    Getting Started
                  </Typography>
                </Box>
                <Button
                  variant="contained"
                  size="large"
                  startIcon={<AddIcon />}
                  onClick={() => navigate(ROUTES.SETTINGS_WORKSPACE)}
                  sx={{
                    borderRadius: 1,
                    px: 2,
                    py: 1.5,
                    background: `linear-gradient(135deg, ${theme.palette.success.main} 0%, ${theme.palette.success.dark} 100%)`,
                    boxShadow: `0 8px 30px ${alpha(theme.palette.success.main, 0.3)}`,
                    '&:hover': {
                      transform: 'translateY(-2px)',
                      boxShadow: `0 12px 40px ${alpha(theme.palette.success.main, 0.4)}`,
                    },
                    transition: 'all 0.3s ease-in-out',
                  }}
                >
                  Connect Data Source
                </Button>
              </Box>
              <Typography variant="h6" color="text.secondary" sx={{ mb: 3, fontWeight: 500 }}>
                Here's what you can do to get the most out of HeadwayHQ:
              </Typography>
              <Grid container spacing={2}>
                {[
                  'Connect your Slack workspace to capture feature mentions',
                  'Organize feedback into themes and categories',
                  'Track feature mentions across all communication channels',
                  'Analyze mention trends and competitive intelligence',
                  'Prioritize development based on mention frequency',
                ].map((item, index) => (
                  <Grid item xs={12} sm={6} key={index}>
                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, p: 1.5, borderRadius: 2, background: alpha(theme.palette.success.main, 0.05) }}>
                      <Box sx={{
                        width: 24,
                        height: 24,
                        borderRadius: '50%',
                        background: `linear-gradient(135deg, ${theme.palette.success.main} 0%, ${theme.palette.success.dark} 100%)`,
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        fontSize: '0.75rem',
                        color: 'white',
                        fontWeight: 700,
                      }}>
                        {index + 1}
                      </Box>
                      <Typography variant="body2" sx={{ fontWeight: 500 }}>
                        {item}
                      </Typography>
                    </Box>
                  </Grid>
                ))}
              </Grid>
            </CardContent>
          </Card>
        </Box>
      </Box>
    </AdminLayout>
  );
}